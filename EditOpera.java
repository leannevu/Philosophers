
package FamousOperas;

import java.awt.Color;
import java.awt.Toolkit;

/**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 *<pre>
 Class        EditOpera
 File         EditOpera.java
 Description  A class used to Edit a new opera
 Project	FamousOperas
 Platform	jdk 1.8.0_241; NetBeans IDE 11.3; Windows 10
 * @author      <i>Leanne Vu</i>
 * Date     	1/26/2021
 * @version     1.0.0
 * @see         java.awt.Color
 * @see         javax.swing.JOptionPane
 *</pre>~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
public class EditOpera extends javax.swing.JDialog {
    private Operas newOpera;  //new Composer obj are create
    private boolean error = false;
    private String errorMessage = " ";//Error message
    private final int MAX = 2021; // Max years of the composition
    private final Color white = Color.WHITE; //Default background color for input textfield
    private final Color pink = Color.PINK; //Default background color for bad input textfield
    
    /**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     *<pre>
     * Constructor  EditComposers() 
     * Description  Create an instance of the GUI form, set the default
     *              JButton to ne saveJButton, set icon image, centers the form
     *              and sets the JDialog form to modal
     * Date         1/26/2021
    * @author	<i>Leanne Vu </i>
    *</pre>
    *~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
    public EditOpera() {
       // super(parent, modal);
        initComponents();
         this.getRootPane().setDefaultButton(saveJButton);
        this.setIconImage(Toolkit.getDefaultToolkit().getImage(
                "src/FamousMusicComposers/icon_Pachelbel.jpg"));
        // center the application
        setLocationRelativeTo(null);
        nameJTextField.requestFocus(); //focus to nameJTextField
        newOpera = null;
        setAlwaysOnTop(true);
        setModal(true);
    }
    
    /**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     *<pre>
     * Constructor      EditComposers()-overloaded constructor
     * Description      Calls default constructor tolerate an instance of the GUI
     *                  form and populate data fields for the selected opera
     * @param           operas Operas
     * @author          <i>Leanne Vu</i>
     * Date             1/26/2021
     *</pre>
     *~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     */
        public EditOpera(Operas operas){
            this();
            nameJTextField.setText(operas.getName());
            composerNameJTextField.setText(operas.getComposer());
            yearJTextField.setText(Integer.toString(operas.getYears()));
            cityJTextField.setText(operas.getCity());
            synopsisJTextArea.setText(operas.getSynopsis());
            linkJTextField.setText(operas.getLink());
            nameJTextField.requestFocus();
        }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        displayJPanel = new javax.swing.JPanel();
        titleJPanel = new javax.swing.JPanel();
        titleJLabel = new javax.swing.JLabel();
        logoJLabel = new javax.swing.JLabel();
        controlJPanel = new javax.swing.JPanel();
        saveJButton = new javax.swing.JButton();
        exitJButton = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        nameJLabel = new javax.swing.JLabel();
        nameJTextField = new javax.swing.JTextField();
        composerNameJLabel = new javax.swing.JLabel();
        composerNameJTextField = new javax.swing.JTextField();
        yearJLabel = new javax.swing.JLabel();
        yearJTextField = new javax.swing.JTextField();
        cityJLabel = new javax.swing.JLabel();
        cityJTextField = new javax.swing.JTextField();
        synopsisJLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        synopsisJTextArea = new javax.swing.JTextArea();
        linkJLabel = new javax.swing.JLabel();
        linkJTextField = new javax.swing.JTextField();

        displayJPanel.setLayout(new java.awt.GridLayout(6, 2, 5, 5));

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Add New Composer");
        setResizable(false);

        titleJLabel.setFont(new java.awt.Font("Tempus Sans ITC", 3, 24)); // NOI18N
        titleJLabel.setForeground(new java.awt.Color(255, 51, 51));
        titleJLabel.setText("Edit Opera");

        logoJLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/FamousOperas/Splash3.jpg"))); // NOI18N

        javax.swing.GroupLayout titleJPanelLayout = new javax.swing.GroupLayout(titleJPanel);
        titleJPanel.setLayout(titleJPanelLayout);
        titleJPanelLayout.setHorizontalGroup(
            titleJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(titleJPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(logoJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(58, 58, 58)
                .addComponent(titleJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(116, Short.MAX_VALUE))
        );
        titleJPanelLayout.setVerticalGroup(
            titleJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(titleJPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(titleJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(logoJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(titleJLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 99, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getContentPane().add(titleJPanel, java.awt.BorderLayout.NORTH);

        saveJButton.setBackground(new java.awt.Color(102, 255, 153));
        saveJButton.setMnemonic('S');
        saveJButton.setText("Save");
        saveJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveJButtonActionPerformed(evt);
            }
        });

        exitJButton.setBackground(new java.awt.Color(102, 255, 153));
        exitJButton.setMnemonic('C');
        exitJButton.setText("Cancel");
        exitJButton.setToolTipText("");
        exitJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitJButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout controlJPanelLayout = new javax.swing.GroupLayout(controlJPanel);
        controlJPanel.setLayout(controlJPanelLayout);
        controlJPanelLayout.setHorizontalGroup(
            controlJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(controlJPanelLayout.createSequentialGroup()
                .addGap(86, 86, 86)
                .addComponent(saveJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(54, 54, 54)
                .addComponent(exitJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(103, Short.MAX_VALUE))
        );
        controlJPanelLayout.setVerticalGroup(
            controlJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(controlJPanelLayout.createSequentialGroup()
                .addContainerGap(20, Short.MAX_VALUE)
                .addGroup(controlJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(exitJButton)
                    .addComponent(saveJButton))
                .addContainerGap())
        );

        getContentPane().add(controlJPanel, java.awt.BorderLayout.SOUTH);

        jPanel2.setLayout(new java.awt.GridLayout(6, 2, 5, 5));

        nameJLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        nameJLabel.setText("Name of Opera:");
        jPanel2.add(nameJLabel);

        nameJTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                nameJTextFieldFocusLost(evt);
            }
        });
        jPanel2.add(nameJTextField);

        composerNameJLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        composerNameJLabel.setText("Composer");
        jPanel2.add(composerNameJLabel);

        composerNameJTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                composerNameJTextFieldFocusLost(evt);
            }
        });
        jPanel2.add(composerNameJTextField);

        yearJLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        yearJLabel.setText("Year first performed:");
        jPanel2.add(yearJLabel);

        yearJTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                yearJTextFieldFocusLost(evt);
            }
        });
        jPanel2.add(yearJTextField);

        cityJLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        cityJLabel.setText("City first performed:");
        jPanel2.add(cityJLabel);

        cityJTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                cityJTextFieldFocusLost(evt);
            }
        });
        jPanel2.add(cityJTextField);

        synopsisJLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        synopsisJLabel.setText("Synopsis:");
        jPanel2.add(synopsisJLabel);

        jScrollPane1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        synopsisJTextArea.setColumns(20);
        synopsisJTextArea.setLineWrap(true);
        synopsisJTextArea.setRows(1);
        synopsisJTextArea.setWrapStyleWord(true);
        synopsisJTextArea.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        synopsisJTextArea.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                synopsisJTextAreaFocusLost(evt);
            }
        });
        jScrollPane1.setViewportView(synopsisJTextArea);

        jPanel2.add(jScrollPane1);

        linkJLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        linkJLabel.setText("Link to Youtube:");
        jPanel2.add(linkJLabel);

        linkJTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                linkJTextFieldFocusLost(evt);
            }
        });
        jPanel2.add(linkJTextField);

        getContentPane().add(jPanel2, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    /**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    *<pre>
    * Method        saveJButton() 
    * Description   Event handler for editing an opera databse
    * @parem        evt ActionEvent
    * @author       <i>Leanne Vu</i>	
    * Date          1/26/2021
    *</pre>
    * ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
    private void saveJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveJButtonActionPerformed
         String name;
         String composition;
         int years;
         String city;
         String synopsis;
         String link;
         
         //Read all input as a Strinf
         String composersName = nameJTextField.getText();
         String music = composerNameJTextField.getText();
         String year = yearJTextField.getText();
         String metropolis = cityJTextField.getText(); 
         String syn = synopsisJTextArea.getText(); 
         String url = linkJTextField.getText();
         
         //call appropriate Validation method to verifid input
         if (!Validation.isValidName(composersName)){
             errorMessage += "Invalid Composer Name \n";
              nameJTextField.requestFocus();
              error = true;
               nameJTextField.setToolTipText( nameJTextField.getToolTipText()
                       + "--Invalid Composer Name") ;
         } else if (!Validation.isInteger(year, 0 , MAX)){
              errorMessage += "Invalid Year First Perform\n";
              yearJTextField.requestFocus();
              error = true;
              yearJTextField.setToolTipText( yearJTextField.getToolTipText()
                       + "--Invalid Composer Year") ;
         }else if (!Validation.isValidName(music)){
              errorMessage += "Invalid the composition name\n";
              composerNameJTextField.requestFocus();
              error = true;
              composerNameJTextField.setToolTipText( composerNameJTextField.getToolTipText()
                       + "--Invalid Composition Name") ;
         }else if (!Validation.isValidName(metropolis)){
              errorMessage += "Invalid the city name\n";
              cityJTextField.requestFocus();
              error = true;
              cityJTextField.setToolTipText( cityJTextField.getToolTipText()
                       + "--Invalid city Name") ;
        }else if (!Validation.isValidURL(url)){
              errorMessage += "Invalid link\n";
              linkJTextField.requestFocus();
              error = true;
              linkJTextField.setToolTipText( linkJTextField.getToolTipText()
                       + "--Invalid link") ;
        }else if (!Validation.isValidName(syn)){
              errorMessage += "Invalid description\n";
              synopsisJTextArea.requestFocus();
              error = true;
              synopsisJTextArea.setToolTipText( synopsisJTextArea.getToolTipText()
                       + "--Invalid description") ;
        } else 
            error = false;
         if (!error)  // all input valid
         {
             try{
                name =  nameJTextField.getText();
                composition = composerNameJTextField.getText();
                years =Integer.parseInt( yearJTextField.getText());
                city = cityJTextField.getText();
                synopsis = synopsisJTextArea.getText();
                link = linkJTextField.getText();
                newOpera = new Operas(name, composition,  years, city,  synopsis,  link);
                this.dispose(); //close form
             
             }catch(Exception ex){
                 throw new RuntimeException("Error parsing input");
             }
         }
    }//GEN-LAST:event_saveJButtonActionPerformed
    
   /**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     *<pre>
     * Method        exitJButtonActionPerformed()
     * Description   Event handler for cancel adding a new city: do nothing and
     *               leave newCity as null.
     * @param        evt ActionWvent
     * @see          java.awt.event.ActionEvent
     * Date         1/26/2021
     * History log  
     * @author	<i>Leanne Vu</i>
    *</pre>
    *~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
    private void exitJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitJButtonActionPerformed
        this.dispose();
    }//GEN-LAST:event_exitJButtonActionPerformed

    /**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     *<pre>
     * Method        nameJTextFieldFocusLost() 
     * Description   Event handler for the nameJTextField. It changes colors
     *               if input is not a valid name.
     * @parem        evt FocusEvent
     * @author       <i>Leanne Vu</i>	
     * Date          1/26/2021
     *</pre>
     * ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
    private void nameJTextFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_nameJTextFieldFocusLost
        // Set background textfield color
        String input = nameJTextField.getText();
        if (Validation.isValidName(input))
            nameJTextField.setBackground(white);
        else
            nameJTextField.setBackground(pink);
    }//GEN-LAST:event_nameJTextFieldFocusLost

    /**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     *<pre>
     * Method        compositionNameJTextFieldFocusLost() 
     * Description   Event handler for the compositionNameJTextFieldFocusLost.
     *               It changes colors if input is not a valid name.
     * @parem        evt FocusEvent
     * @author       <i>Leanne Vu</i>	
     * Date          1/26/2021
     *</pre>
     * ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
    private void composerNameJTextFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_composerNameJTextFieldFocusLost
         // Set background textfield color
        String input = composerNameJTextField.getText();
        if (Validation.isValidName(input))
            composerNameJTextField.setBackground(white);
        else
            composerNameJTextField.setBackground(pink);
    }//GEN-LAST:event_composerNameJTextFieldFocusLost

    /**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     *<pre>
     * Method        yearJTextFieldFocusLost() 
     * Description   Event handler for the yearJTextFieldFocusLost().
     *               It changes colors if input is not a valid name.
     * @parem        evt FocusEvent
     * @author       <i>Leanne Vu</i>	
     * Date          1/26/2021
     *</pre>
     * ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
    private void yearJTextFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_yearJTextFieldFocusLost
                // Set background textfield color
        String input = yearJTextField.getText();
        if (Validation.isInteger(input, 0 , MAX))
            yearJTextField.setBackground(white);
        else
            yearJTextField.setBackground(pink);
    }//GEN-LAST:event_yearJTextFieldFocusLost
 
    /**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     *<pre>
     * Method        cityJTextFieldFocusLost() 
     * Description   Event handler for the cityJTextFieldFocusLost().
     *               It changes colors if input is not a valid name.
     * @parem        evt FocusEvent
     * @author       <i>Leanne Vu</i>	
     * Date          1/26/2021
     *</pre>
     * ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/  
    private void cityJTextFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cityJTextFieldFocusLost
                        // Set background textfield color
        String input = cityJTextField.getText();
        if (Validation.isValidName(input))
            cityJTextField.setBackground(white);
        else
            cityJTextField.setBackground(pink);
    }//GEN-LAST:event_cityJTextFieldFocusLost

    /**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     *<pre>
     * Method        synopsisJTextAreaFocusLost() 
     * Description   Event handler for the synopsisJTextAreaFocusLost().
     *               It changes colors if input is not a valid name.
     * @parem        evt FocusEvent
     * @author       <i>Leanne Vu</i>	
     * Date          1/26/2021
     *</pre>
     * ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/  
    private void synopsisJTextAreaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_synopsisJTextAreaFocusLost
                                // Set background textfield color
        String input = synopsisJTextArea.getText();
        if (Validation.isValidName(input))
            synopsisJTextArea.setBackground(white);
        else
            synopsisJTextArea.setBackground(pink);
    }//GEN-LAST:event_synopsisJTextAreaFocusLost

    /**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     *<pre>
     * Method        linkJTextFieldFocusLost() 
     * Description   Event handler for the linkJTextFieldFocusLost().
     *               It changes colors if input is not a valid name.
     * @parem        evt FocusEvent
     * @author       <i>Leanne Vu</i>	
     * Date          1/26/2021
     *</pre>
     * ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/  
    private void linkJTextFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_linkJTextFieldFocusLost
     // Set background textfield color
        String input = linkJTextField.getText();
        if (Validation.isValidURL(input))
            linkJTextField.setBackground(white);
        else
            linkJTextField.setBackground(pink);
    }//GEN-LAST:event_linkJTextFieldFocusLost

    
    public Operas getComposers(){
            return newOpera;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel cityJLabel;
    private javax.swing.JTextField cityJTextField;
    private javax.swing.JLabel composerNameJLabel;
    private javax.swing.JTextField composerNameJTextField;
    private javax.swing.JPanel controlJPanel;
    private javax.swing.JPanel displayJPanel;
    private javax.swing.JButton exitJButton;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel linkJLabel;
    private javax.swing.JTextField linkJTextField;
    private javax.swing.JLabel logoJLabel;
    private javax.swing.JLabel nameJLabel;
    private javax.swing.JTextField nameJTextField;
    private javax.swing.JButton saveJButton;
    private javax.swing.JLabel synopsisJLabel;
    private javax.swing.JTextArea synopsisJTextArea;
    private javax.swing.JLabel titleJLabel;
    private javax.swing.JPanel titleJPanel;
    private javax.swing.JLabel yearJLabel;
    private javax.swing.JTextField yearJTextField;
    // End of variables declaration//GEN-END:variables
}
